name: Build Windows Wheels

on:
  push:
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      # 1) Check out your wrapper code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Install Python
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3) Install CMake
      - name: Install CMake
        run: choco install --yes cmake

      # 4) Clone & patch codec2, then build only the shared library with MSVC
      - name: Build libcodec2.dll & import‐lib
        shell: bash
        run: |
          git clone https://github.com/drowe67/codec2.git codec2
          cd codec2

          # remove Linux‐only warning/opt flags
          sed -i 's/-Wall//g; s/-Wno-strict-overflow//g; s/-O3//g' CMakeLists.txt
          # drop the stray -lm on Windows
          sed -i 's/target_link_libraries(${PROJECT_NAME} ${LIBS} m)/target_link_libraries(${PROJECT_NAME} ${LIBS})/' CMakeLists.txt
          # guard sample‐apps loop (so we don’t build deframer.c, etc.)
          sed -i '/foreach([^)]*${CHFILES}/i if(NOT WIN32)' src/CMakeLists.txt
          sed -i '/endforeach()/a endif()'                        src/CMakeLists.txt

          mkdir build && cd build
          # Use the VS generator so -A x64 works
          cmake .. -G "Visual Studio 17 2022" -A x64 -DUNITTEST=FALSE
          cmake --build . --config Release --target codec2

          # Stage the DLL + import‐lib for your Python extension
          mkdir -p ../../lib_win
          cp src/libcodec2.dll  ../../lib_win/libcodec2.dll
          cp src/codec2.lib     ../../lib_win/libcodec2.lib

      # 5) Build your wheels via cibuildwheel
      - name: Build Python wheels
        uses: pypa/cibuildwheel@v2.23.2
        with:
          platform: windows

      # 6) Upload the resulting .whl files
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pycodec2-windows-wheels
          path: wheelhouse/*.whl



