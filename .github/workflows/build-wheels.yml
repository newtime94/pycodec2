name: Build Windows Wheels

on:
  push:
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      # 1) Checkout your fork
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Set up Python
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3) Install CMake (+ Ninja for faster builds)
      - name: Install build tools
        run: |
          choco install --yes cmake ninja

      # 4) Clone upstream codec2 and patch its CMake
      - name: Clone & patch codec2
        shell: bash
        run: |
          git clone https://github.com/drowe67/codec2.git codec2
          cd codec2

          # Strip out Linux‐only warning & optimization flags
          sed -i 's/-Wall//g; s/-Wno-strict-overflow//g; s/-O3//g' CMakeLists.txt

          # Remove the '-lm' link on Windows
          sed -i 's/target_link_libraries(${PROJECT_NAME} ${LIBS} m)/target_link_libraries(${PROJECT_NAME} ${LIBS})/' CMakeLists.txt

          # Wrap the 'foreach(${CHFILES}) … endforeach()' in if(NOT WIN32)...endif()
          sed -i '/foreach([^)]*${CHFILES}/i if(NOT WIN32)' src/CMakeLists.txt
          sed -i '/endforeach()/a endif()' src/CMakeLists.txt

      # 5) Configure & build only the 'codec2' target
      - name: Build libcodec2.dll & import‑lib
        shell: bash
        run: |
          cd codec2
          mkdir build && cd build
          cmake .. -A x64 -DUNITTEST=FALSE -G Ninja
          cmake --build . --config Release --target codec2

          # Stage for Python extension
          mkdir -p ../../lib_win
          cp src/libcodec2.dll  ../../lib_win/libcodec2.dll
          cp src/codec2.lib     ../../lib_win/libcodec2.lib

      # 6) Build Windows wheels with cibuildwheel
      - name: Build Python wheels
        uses: pypa/cibuildwheel@v2.23.2
        with:
          platform: windows

      # 7) Upload the resulting .whl files
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pycodec2-windows-wheels
          path: wheelhouse/*.whl


